version: "3.6"

services:
  #pgadmin4:
  #  image: dpage/pgadmin4:4.28
  #  hostname: pgadmin4
  #  ports:
  #    - 59351:80
  #  networks:
  #    - imagine_poc
  #  environment:
  #    - PGADMIN_DEFAULT_EMAIL=noreply@imaginecommunications.com
  #    - PGADMIN_DEFAULT_PASSWORD=ImagineDB1
  #  deploy:
  #    replicas: 1
  #    placement:
  #      constraints:
  #        - node.role == manager

  prometheus:
    image: prom/prometheus:v2.23.0
    ports:
      - 9090:9090
    networks:
      - imagine_poc
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention=200h"
      - "--web.enable-lifecycle"
    volumes:
      - /etc/imagine/config/prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

#REMOVED ALERT MANAGER - 220825 - JR
  #alertmanager:
  #  image: prom/alertmanager:v0.21.0
  #  ports:
  #    - 9093:9093
  #  networks:
  #    - imagine_poc
  #  volumes:
  #    - /etc/imagine/config/prometheus/alertmanager/:/etc/alertmanager/
  #  command:
  #    - "--config.file=/etc/alertmanager/alertmanager.yml"
  #    - "--storage.path=/alertmanager"
  #  deploy:
  #    replicas: 1
  #    placement:
  #      constraints:
  #        - node.role == manager

  grafana:
    image: grafana/grafana:8.1.5
    ports:
      - 3000:3000
    networks:
      - imagine_poc
    user: "$UID:$GID"
    volumes:
      - /etc/imagine/config/grafana/data:/var/lib/grafana
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager


  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.39.3
    networks:
      - imagine_poc 
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - 8085:8080
    deploy:
      mode: global
     # replicas: 1
     # placement:
     #   constraints:
     #     - node.role == manager

 # portainer:
 #   image: portainer/portainer-ce:latest
 #   ports:
 #     - 9000:9000
 #     - 8000:8000
 #   networks:
 #     - imagine_poc
 #   volumes:
 #     - /var/run/docker.sock:/var/run/docker.sock
 #     - /portainer_data:/data
 #   restart: always
 #   deploy:
 #     replicas: 1
 #     placement:
 #       constraints:
 #         - node.role == manager
          
networks:
  imagine_poc:
    external: true

volumes:
  prometheus_data: {}
